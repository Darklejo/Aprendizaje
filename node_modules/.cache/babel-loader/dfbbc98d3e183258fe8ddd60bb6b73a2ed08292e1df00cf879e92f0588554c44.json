{"ast":null,"code":"var _jsxFileName = \"/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/PrincipalComponent/AppComponents.js\";\nimport React from \"react\";\nimport { TodoTitle } from '../ExerciseList/TodoTitle'; // De esta manera es como importamos los componentes que estamos creando\nimport { TitleCreateExercise } from '../CreateExercise/CreateExercise';\nimport { CreateExercise } from '../CreateExercise/CreateExercise';\nimport { ImgExercise } from '../ExerciseList/ImgExercise.js';\nimport { SearchExercise } from '../ExerciseList/TodoItem.js';\nimport { TodoList } from '../ExerciseList/TodoList.js';\nimport { TodoItem } from '../ExerciseList/TodoItem.js';\nimport { PageLoading } from \"../PageLoading/PageLoading\";\nimport { PageError } from \"../PageError/PageError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppComponents(_ref // loading,\n// error,\n// createValue,\n// setCreateValue,\n// completedExercise,\n// totalExercise,\n// searchExercise,\n// setSearchExercise,\n// searchedExercise,\n// exerciseCompleted,\n// deltedExercise\n) {\n  let {} = _ref;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitleCreateExercise, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateExercise, {\n      createValue: createValue // Despues de escribir el estado esta es la manera de concetar componentes hijos al componente padre\n      ,\n      setCreateValue: setCreateValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoTitle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchExercise, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: [loading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(PageError, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }, this), !loading && searchedExercise.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"NO HAY COINCIDENCIAS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 60\n      }, this), searchedExercise.map(item =>\n      /*#__PURE__*/\n      // Esta es la manera de trabajar con arrays, sus objetos y su manipulacion en react, despues de el componente, debemos indicar una key que concuerde con el objeto que se desea obtener. Al escribir el metodo para obetener el return no es en llaves si no en parentesis. Estoy ejecutando un estado derivado para poder filtrar el resultado que deseo\n      _jsxDEV(TodoItem, {\n        text: item.text,\n        completed: item.completed,\n        onCompleted: () => exerciseCompleted(item.text) // Se debe ejecutar como una funcion dentro de otra funcion para que no se rompa la aplicacion\n        ,\n        onDeleted: () => deltedExercise(item.text)\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(ImgExercise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this) // Esto es indispensable o sino el codigo se rompe, todos los componentes deben ir dentro de una etiqueta para poderse renderizar y este es la forma que nos da React para solucionar eso\n  ;\n}\n_c = AppComponents;\nexport { AppComponents };\nvar _c;\n$RefreshReg$(_c, \"AppComponents\");","map":{"version":3,"names":["React","TodoTitle","TitleCreateExercise","CreateExercise","ImgExercise","SearchExercise","TodoList","TodoItem","PageLoading","PageError","AppComponents","createValue","setCreateValue","loading","error","searchedExercise","length","map","item","text","completed","exerciseCompleted","deltedExercise"],"sources":["/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/PrincipalComponent/AppComponents.js"],"sourcesContent":["import React from \"react\"\nimport { TodoTitle } from'../ExerciseList/TodoTitle' // De esta manera es como importamos los componentes que estamos creando\nimport { TitleCreateExercise } from '../CreateExercise/CreateExercise'\nimport { CreateExercise } from'../CreateExercise/CreateExercise'\nimport { ImgExercise } from '../ExerciseList/ImgExercise.js'\nimport { SearchExercise } from '../ExerciseList/TodoItem.js'\nimport { TodoList } from'../ExerciseList/TodoList.js'\nimport { TodoItem } from'../ExerciseList/TodoItem.js'\nimport { PageLoading } from \"../PageLoading/PageLoading\"\nimport { PageError } from \"../PageError/PageError\"\n\nfunction AppComponents({\n    // loading,\n    // error,\n    // createValue,\n    // setCreateValue,\n    // completedExercise,\n    // totalExercise,\n    // searchExercise,\n    // setSearchExercise,\n    // searchedExercise,\n    // exerciseCompleted,\n    // deltedExercise\n}) {\n    return(\n\n        <React.Fragment> \n            <TitleCreateExercise />\n            <CreateExercise\n            createValue={createValue} // Despues de escribir el estado esta es la manera de concetar componentes hijos al componente padre\n            setCreateValue={setCreateValue}\n            />\n            \n            <TodoTitle />\n            <SearchExercise />\n\n            <TodoList>\n            {loading && <PageLoading />}\n            {error && <PageError />}\n            {(!loading && searchedExercise.length == 0) && <p>NO HAY COINCIDENCIAS</p>}\n\n            {searchedExercise.map(item => ( // Esta es la manera de trabajar con arrays, sus objetos y su manipulacion en react, despues de el componente, debemos indicar una key que concuerde con el objeto que se desea obtener. Al escribir el metodo para obetener el return no es en llaves si no en parentesis. Estoy ejecutando un estado derivado para poder filtrar el resultado que deseo\n                <TodoItem \n                key={item.text} \n                text={item.text} \n                completed={item.completed}\n                onCompleted={() => exerciseCompleted(item.text)} // Se debe ejecutar como una funcion dentro de otra funcion para que no se rompa la aplicacion\n                onDeleted={() => deltedExercise(item.text)}\n                />\n            ))}\n            <ImgExercise />\n            </TodoList>\n        </React.Fragment> // Esto es indispensable o sino el codigo se rompe, todos los componentes deben ir dentro de una etiqueta para poderse renderizar y este es la forma que nos da React para solucionar eso\n    )\n}\nexport { AppComponents }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAO,2BAA2B,EAAC;AACrD,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,cAAc,QAAO,kCAAkC;AAChE,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,QAAQ,QAAO,6BAA6B;AACrD,SAASC,QAAQ,QAAO,6BAA6B;AACrD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,SAAS,QAAQ,wBAAwB;AAAA;AAElD,SAASC,aAAa,MAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,EACD;EAAA,IAZoB,CAYvB,CAAC;EACG,oBAEI,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACX,QAAC,mBAAmB;MAAA;MAAA;MAAA;IAAA,QAAG,eACvB,QAAC,cAAc;MACf,WAAW,EAAEC,WAAY,CAAC;MAAA;MAC1B,cAAc,EAAEC;IAAe;MAAA;MAAA;MAAA;IAAA,QAC7B,eAEF,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACb,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAElB,QAAC,QAAQ;MAAA,WACRC,OAAO,iBAAI,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAG,EAC1BC,KAAK,iBAAI,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG,EACrB,CAACD,OAAO,IAAIE,gBAAgB,CAACC,MAAM,IAAI,CAAC,iBAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA2B,EAEzED,gBAAgB,CAACE,GAAG,CAACC,IAAI;MAAA;MAAM;MAC5B,QAAC,QAAQ;QAET,IAAI,EAAEA,IAAI,CAACC,IAAK;QAChB,SAAS,EAAED,IAAI,CAACE,SAAU;QAC1B,WAAW,EAAE,MAAMC,iBAAiB,CAACH,IAAI,CAACC,IAAI,CAAE,CAAC;QAAA;QACjD,SAAS,EAAE,MAAMG,cAAc,CAACJ,IAAI,CAACC,IAAI;MAAE,GAJtCD,IAAI,CAACC,IAAI;QAAA;QAAA;QAAA;MAAA,QAMjB,CAAC,eACF,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACE,CAAC;EAAA;AAE1B;AAAC,KA3CQT,aAAa;AA4CtB,SAASA,aAAa;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}