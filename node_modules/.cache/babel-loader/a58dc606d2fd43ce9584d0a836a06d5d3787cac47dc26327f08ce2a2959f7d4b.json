{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\n\n// CUSTOM HOOK\n\nfunction useLocalStorage(itemName, intialValue) {\n  _s();\n  const [item, setItem] = React.useState(intialValue);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false);\n  // LOCAL STORAGE\n  React.useEffect(() => {\n    // conesta funcion que es un custom hook, en react es la manera de ejecutar una funcion asincrona\n    try {\n      const localStorageItem = localStorage.getItem(itemName);\n      let parsedItem;\n      if (!localStorageItem) {\n        localStorage.setItem(itemName, JSON.stringify(intialValue));\n        parsedItem = intialValue;\n      } else {\n        parsedItem = JSON.parse(localStorageItem);\n        setItem(parsedItem);\n      }\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  });\n  const saveItem = newItem => {\n    // Esta funcion actualiza el estado y el localStorage\n    localStorage.setItem(itemName, JSON.stringify(newItem));\n    setItem(newItem);\n  };\n  return {\n    item,\n    saveItem,\n    loading,\n    error\n  };\n}\n_s(useLocalStorage, \"bOpoLlZdzZa+Dsxx/tr70N70w98=\");\nexport { useLocalStorage };","map":{"version":3,"names":["React","useLocalStorage","itemName","intialValue","item","setItem","useState","loading","setLoading","error","setError","useEffect","localStorageItem","localStorage","getItem","parsedItem","JSON","stringify","parse","saveItem","newItem"],"sources":["/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/PrincipalComponent/useLocalSotorage.js"],"sourcesContent":["import React from \"react\"\n\n// CUSTOM HOOK\n\nfunction useLocalStorage(itemName, intialValue){\n  const [item, setItem] = React.useState(intialValue)\n  const [loading, setLoading] = React.useState(true)\n  const [error, setError] = React.useState(false)\n    // LOCAL STORAGE\n    React.useEffect(()=>{ // conesta funcion que es un custom hook, en react es la manera de ejecutar una funcion asincrona\n      try {\n        const localStorageItem = localStorage.getItem(itemName)\n        let parsedItem\n\n        if(!localStorageItem){\n          localStorage.setItem(itemName, JSON.stringify(intialValue))\n          parsedItem = intialValue\n        } else{\n          parsedItem = JSON.parse(localStorageItem)\n          setItem(parsedItem)\n        }\n      } catch (error){\n        setError(error)\n        setLoading(false)\n      }\n      setLoading(false)\n    })\n  \n    const saveItem = (newItem)=>{ // Esta funcion actualiza el estado y el localStorage\n      localStorage.setItem(itemName, JSON.stringify(newItem))\n      setItem(newItem)\n    }\n    return {\n      item, \n      saveItem, \n      loading, \n      error}\n}\n\nexport { useLocalStorage }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA,SAASC,eAAe,CAACC,QAAQ,EAAEC,WAAW,EAAC;EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAACH,WAAW,CAAC;EACnD,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACM,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC;EAC7C;EACAN,KAAK,CAACW,SAAS,CAAC,MAAI;IAAE;IACpB,IAAI;MACF,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAACZ,QAAQ,CAAC;MACvD,IAAIa,UAAU;MAEd,IAAG,CAACH,gBAAgB,EAAC;QACnBC,YAAY,CAACR,OAAO,CAACH,QAAQ,EAAEc,IAAI,CAACC,SAAS,CAACd,WAAW,CAAC,CAAC;QAC3DY,UAAU,GAAGZ,WAAW;MAC1B,CAAC,MAAK;QACJY,UAAU,GAAGC,IAAI,CAACE,KAAK,CAACN,gBAAgB,CAAC;QACzCP,OAAO,CAACU,UAAU,CAAC;MACrB;IACF,CAAC,CAAC,OAAON,KAAK,EAAC;MACbC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACnB;IACAA,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,CAAC;EAEF,MAAMW,QAAQ,GAAIC,OAAO,IAAG;IAAE;IAC5BP,YAAY,CAACR,OAAO,CAACH,QAAQ,EAAEc,IAAI,CAACC,SAAS,CAACG,OAAO,CAAC,CAAC;IACvDf,OAAO,CAACe,OAAO,CAAC;EAClB,CAAC;EACD,OAAO;IACLhB,IAAI;IACJe,QAAQ;IACRZ,OAAO;IACPE;EAAK,CAAC;AACZ;AAAC,GAjCQR,eAAe;AAmCxB,SAASA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}