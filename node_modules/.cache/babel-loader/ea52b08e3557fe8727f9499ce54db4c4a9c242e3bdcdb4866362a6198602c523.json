{"ast":null,"code":"var _jsxFileName = \"/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/App.js\";\nimport { TodoTitle } from './TodoTitle'; // De esta manera es como importamos los componentes que estamos creando\nimport { TodoSearch } from './TodoSearch';\nimport { TodoList } from './TodoList';\nimport { TodoItem } from './TodoItem';\nimport { BotonCreateTodo } from './BotonCreateTodo';\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultExercise = [{\n  text: 'pecho plano',\n  completed: true\n}, {\n  text: 'pecho inclinado',\n  completed: false\n}, {\n  text: 'apertura de pecho',\n  completed: true\n}, {\n  text: 'trapecio',\n  completed: false\n}];\nfunction App() {\n  // Con react las funciones empiezan con una letra mayusculas y estas funciones toman el nombre de complemetos. Lo que hay dentro de la funcion(complemento) se llama elemento, que es una combinacion de sintaxis html con js\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoTitle, {\n      completed: 3,\n      total: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: defaultExercise.map(item =>\n      /*#__PURE__*/\n      // Esta es la manera de trabajar con objetos y sus metodos en react, despues de el componente, debemos indicar una key que concuerde con el objeto que se desea obtener. Al escribir el metodo para obetener el return no es en llaves si no en parentesis\n      _jsxDEV(TodoItem, {\n        text: item.text\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotonCreateTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n} // En react los complementos de la pagina primero deben estar dentro de un div porque no se pueden devolver todos los componentes de una en el return y otra forma de hacer esto es con <React.Fragment></React.Fragment>\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoTitle","TodoSearch","TodoList","TodoItem","BotonCreateTodo","React","defaultExercise","text","completed","App","map","item"],"sources":["/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/App.js"],"sourcesContent":["import { TodoTitle } from'./TodoTitle' // De esta manera es como importamos los componentes que estamos creando\nimport { TodoSearch } from'./TodoSearch'\nimport { TodoList } from'./TodoList'\nimport { TodoItem } from'./TodoItem'\nimport { BotonCreateTodo } from'./BotonCreateTodo'\nimport './App.css';\nimport React from 'react'\n\nconst defaultExercise = [\n  {text: 'pecho plano', completed: true},\n  {text: 'pecho inclinado', completed:false},\n  {text: 'apertura de pecho', completed: true},\n  {text: 'trapecio', completed: false}\n]\n\nfunction App() { // Con react las funciones empiezan con una letra mayusculas y estas funciones toman el nombre de complemetos. Lo que hay dentro de la funcion(complemento) se llama elemento, que es una combinacion de sintaxis html con js\n  return (\n    <React.Fragment>\n      <TodoTitle completed={3} total={5}/>\n      <TodoSearch />\n\n      <TodoList>\n       {defaultExercise.map(item => ( // Esta es la manera de trabajar con objetos y sus metodos en react, despues de el componente, debemos indicar una key que concuerde con el objeto que se desea obtener. Al escribir el metodo para obetener el return no es en llaves si no en parentesis\n        <TodoItem key={item.text} text={item.text} />\n       ))}\n      </TodoList>\n\n      <BotonCreateTodo />\n    </React.Fragment>\n  );\n  } // En react los complementos de la pagina primero deben estar dentro de un div porque no se pueden devolver todos los componentes de una en el return y otra forma de hacer esto es con <React.Fragment></React.Fragment>\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAO,aAAa,EAAC;AACvC,SAASC,UAAU,QAAO,cAAc;AACxC,SAASC,QAAQ,QAAO,YAAY;AACpC,SAASC,QAAQ,QAAO,YAAY;AACpC,SAASC,eAAe,QAAO,mBAAmB;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,eAAe,GAAG,CACtB;EAACC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAE;AAAI,CAAC,EACtC;EAACD,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAC;AAAK,CAAC,EAC1C;EAACD,IAAI,EAAE,mBAAmB;EAAEC,SAAS,EAAE;AAAI,CAAC,EAC5C;EAACD,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAE;AAAK,CAAC,CACrC;AAED,SAASC,GAAG,GAAG;EAAE;EACf,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,SAAS;MAAC,SAAS,EAAE,CAAE;MAAC,KAAK,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACpC,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAEd,QAAC,QAAQ;MAAA,UACPH,eAAe,CAACI,GAAG,CAACC,IAAI;MAAA;MAAM;MAC9B,QAAC,QAAQ;QAAiB,IAAI,EAAEA,IAAI,CAACJ;MAAK,GAA3BI,IAAI,CAACJ,IAAI;QAAA;QAAA;QAAA;MAAA,QACxB;IAAC;MAAA;MAAA;MAAA;IAAA,QACQ,eAEX,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEnB,CAAC,CAAC;AAAA,KAfKE,GAAG;AAiBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}