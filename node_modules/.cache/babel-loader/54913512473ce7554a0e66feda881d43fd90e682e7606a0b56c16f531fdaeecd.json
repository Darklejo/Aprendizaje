{"ast":null,"code":"var _jsxFileName = \"/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/PrincipalComponent/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocalStorage } from './useLocalSotorage.js';\nimport { AppComponents } from './AppComponents';\n\n// LISTA DE EJERCICIOS\n\n// const defaultExercise = [\n//   {text: 'pecho plano', completed: false},\n//   {text: 'pecho inclinado', completed:false},\n//   {text: 'apertura de pecho', completed: false},\n//   {text: 'paralelas', completed: false},\n//   {text: 'trapecio', completed: false},\n// ]\n// localStorage.setItem('work-out', JSON.stringify(defaultExercise))\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // ESTADOS\n  console.log('ERROR');\n  const [createValue, setCreateValue] = React.useState(''); // Esta es la manera de crear un estado, con una variable que debe llevar entre corchetes dos parametros que seria el valor que se le este dando en tiempo real y el otro parametro seria el actualizador de el anterior estado\n  //console.log('Agregar exercise ' + createValue) // De esta manera puedo visualizar el restultado en la consola\n  const {\n    item: exercises,\n    saveItem: saveExercises,\n    loading,\n    error\n  } = useLocalStorage('work-out', []); // Le estoy diciendo que el estado inicial es el array con objetos\n  const [searchExercise, setSearchExercise] = React.useState('');\n  //console.log(searchExercise)\n\n  // ESTADOS DERIVADOS\n\n  const completedExercise = exercises.filter(item => item.completed).length; // Esto es un estado derivado, son variables, calculos etc, que hacemos a traves de un estado, tambien con el metodo filter le estoy diciendo que me devuelva los elementos que cumplan con la condicion\n  const totalExercise = exercises.length;\n  const searchedExercise = exercises.filter(item => {\n    return item.text.toLowerCase().includes(searchExercise.toLocaleLowerCase()); // Con estas dos metodos nuevos en el resultado no importa si lo busco en minuscula o mayuscula. Primero debo convertir tod en minuscula en con el metodo .toLowerCase() y despues lo que este entre parentesis del metodo includes le agrego el metodo .toLocaleLowerCase()\n  });\n\n  const exerciseCompleted = text => {\n    const newExercise = [...exercises];\n    const exerciseIndex = newExercise.findIndex(item => item.text == text);\n    newExercise[exerciseIndex].completed = true;\n    saveExercises(newExercise);\n  };\n  const deltedExercise = () => {\n    const newExercise = [...exercises];\n    newExercise.splice(exercises, 1);\n    saveExercises(newExercise);\n  };\n  return /*#__PURE__*/_jsxDEV(AppComponents, {\n    loading: loading,\n    error: error,\n    createValue: createValue,\n    setCreateValue: setCreateValue,\n    completedExercise: completedExercise,\n    totalExercise: totalExercise,\n    searchExercise: searchExercise,\n    setSearchExercise: setSearchExercise,\n    searchedExercise: searchedExercise,\n    exerciseCompleted: exerciseCompleted,\n    deltedExercise: deltedExercise\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n} // En react los complementos de la pagina primero deben estar dentro de un div porque no se pueden devolver todos los componentes de una en el return y otra forma de hacer esto es con <React.Fragment></React.Fragment>\n_s(App, \"9NzoDNfhncf9Km0eZXPsaMJnKto=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport { App };\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useLocalStorage","AppComponents","App","console","log","createValue","setCreateValue","useState","item","exercises","saveItem","saveExercises","loading","error","searchExercise","setSearchExercise","completedExercise","filter","completed","length","totalExercise","searchedExercise","text","toLowerCase","includes","toLocaleLowerCase","exerciseCompleted","newExercise","exerciseIndex","findIndex","deltedExercise","splice"],"sources":["/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/PrincipalComponent/App.js"],"sourcesContent":["import React from 'react'\nimport { useLocalStorage } from './useLocalSotorage.js'\nimport { AppComponents } from './AppComponents'\n\n// LISTA DE EJERCICIOS\n\n// const defaultExercise = [\n//   {text: 'pecho plano', completed: false},\n//   {text: 'pecho inclinado', completed:false},\n//   {text: 'apertura de pecho', completed: false},\n//   {text: 'paralelas', completed: false},\n//   {text: 'trapecio', completed: false},\n// ]\n// localStorage.setItem('work-out', JSON.stringify(defaultExercise))\n\nfunction App() { \n\n  // ESTADOS\n  console.log('ERROR')\n\n  const [createValue, setCreateValue,] = React.useState('') // Esta es la manera de crear un estado, con una variable que debe llevar entre corchetes dos parametros que seria el valor que se le este dando en tiempo real y el otro parametro seria el actualizador de el anterior estado\n  //console.log('Agregar exercise ' + createValue) // De esta manera puedo visualizar el restultado en la consola\n  const {\n    item: exercises, \n    saveItem: saveExercises,\n    loading,\n    error\n  } = useLocalStorage('work-out', []) // Le estoy diciendo que el estado inicial es el array con objetos\n  const [searchExercise, setSearchExercise] = React.useState('')\n  //console.log(searchExercise)\n\n  // ESTADOS DERIVADOS\n\n  const completedExercise = exercises.filter(item => item.completed).length // Esto es un estado derivado, son variables, calculos etc, que hacemos a traves de un estado, tambien con el metodo filter le estoy diciendo que me devuelva los elementos que cumplan con la condicion\n  const totalExercise = exercises.length\n\n  const searchedExercise = exercises.filter((item)=>{\n      return item.text.toLowerCase().includes(searchExercise.toLocaleLowerCase()) // Con estas dos metodos nuevos en el resultado no importa si lo busco en minuscula o mayuscula. Primero debo convertir tod en minuscula en con el metodo .toLowerCase() y despues lo que este entre parentesis del metodo includes le agrego el metodo .toLocaleLowerCase()\n    })\n\n  const exerciseCompleted = (text)=>{\n    const newExercise =[...exercises]\n     const exerciseIndex = newExercise.findIndex(\n      (item) => item.text == text\n     )\n    newExercise[exerciseIndex].completed = true\n    saveExercises(newExercise)\n  }\n\n  const deltedExercise = ()=>{\n    const newExercise =[...exercises]\n    newExercise.splice(exercises, 1)\n    saveExercises(newExercise)\n  }\n\n  return (\n    <AppComponents \n      loading={loading}\n      error={error}\n      createValue={createValue}\n      setCreateValue={setCreateValue}\n      completedExercise={completedExercise}\n      totalExercise={totalExercise}\n      searchExercise={searchExercise}\n      setSearchExercise={setSearchExercise}\n      searchedExercise={searchedExercise}\n      exerciseCompleted={exerciseCompleted}\n      deltedExercise={deltedExercise}\n    />\n  )\n  } // En react los complementos de la pagina primero deben estar dentro de un div porque no se pueden devolver todos los componentes de una en el return y otra forma de hacer esto es con <React.Fragment></React.Fragment>\n\n  export {App}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,aAAa,QAAQ,iBAAiB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EAEb;EACAC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EAEpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAE,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC,EAAC;EAC1D;EACA,MAAM;IACJC,IAAI,EAAEC,SAAS;IACfC,QAAQ,EAAEC,aAAa;IACvBC,OAAO;IACPC;EACF,CAAC,GAAGb,eAAe,CAAC,UAAU,EAAE,EAAE,CAAC,EAAC;EACpC,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC9D;;EAEA;;EAEA,MAAMS,iBAAiB,GAAGP,SAAS,CAACQ,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACU,SAAS,CAAC,CAACC,MAAM,EAAC;EAC1E,MAAMC,aAAa,GAAGX,SAAS,CAACU,MAAM;EAEtC,MAAME,gBAAgB,GAAGZ,SAAS,CAACQ,MAAM,CAAET,IAAI,IAAG;IAC9C,OAAOA,IAAI,CAACc,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACV,cAAc,CAACW,iBAAiB,EAAE,CAAC,EAAC;EAC9E,CAAC,CAAC;;EAEJ,MAAMC,iBAAiB,GAAIJ,IAAI,IAAG;IAChC,MAAMK,WAAW,GAAE,CAAC,GAAGlB,SAAS,CAAC;IAChC,MAAMmB,aAAa,GAAGD,WAAW,CAACE,SAAS,CACzCrB,IAAI,IAAKA,IAAI,CAACc,IAAI,IAAIA,IAAI,CAC3B;IACFK,WAAW,CAACC,aAAa,CAAC,CAACV,SAAS,GAAG,IAAI;IAC3CP,aAAa,CAACgB,WAAW,CAAC;EAC5B,CAAC;EAED,MAAMG,cAAc,GAAG,MAAI;IACzB,MAAMH,WAAW,GAAE,CAAC,GAAGlB,SAAS,CAAC;IACjCkB,WAAW,CAACI,MAAM,CAACtB,SAAS,EAAE,CAAC,CAAC;IAChCE,aAAa,CAACgB,WAAW,CAAC;EAC5B,CAAC;EAED,oBACE,QAAC,aAAa;IACZ,OAAO,EAAEf,OAAQ;IACjB,KAAK,EAAEC,KAAM;IACb,WAAW,EAAER,WAAY;IACzB,cAAc,EAAEC,cAAe;IAC/B,iBAAiB,EAAEU,iBAAkB;IACrC,aAAa,EAAEI,aAAc;IAC7B,cAAc,EAAEN,cAAe;IAC/B,iBAAiB,EAAEC,iBAAkB;IACrC,gBAAgB,EAAEM,gBAAiB;IACnC,iBAAiB,EAAEK,iBAAkB;IACrC,cAAc,EAAEI;EAAe;IAAA;IAAA;IAAA;EAAA,QAC/B;AAEJ,CAAC,CAAC;AAAA,GAvDK5B,GAAG;EAAA,QAYNF,eAAe;AAAA;AAAA,KAZZE,GAAG;AAyDV,SAAQA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}