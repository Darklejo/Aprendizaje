{"ast":null,"code":"var _jsxFileName = \"/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/PrincipalComponent/App.js\",\n  _s = $RefreshSig$();\nimport { TodoTitle } from '../ExerciseList/TodoTitle'; // De esta manera es como importamos los componentes que estamos creando\nimport { TitleCreateExercise } from '../CreateExercise/CreateExercise';\nimport { CreateExercise } from '../CreateExercise/CreateExercise';\nimport { ImgExercise } from '../ExerciseList/ImgExercise.js';\nimport { SearchExercise } from '../ExerciseList/TodoItem.js';\nimport { TodoList } from '../ExerciseList/TodoList.js';\nimport { TodoItem } from '../ExerciseList/TodoItem.js';\nimport { useLocalStorage } from './useLocalSotorage.js';\nimport { AppComponents } from './AppComponents';\n// import { BotonCreateExercise } from'./CreateExercise'\nimport React from 'react';\n\n// LISTA DE EJERCICIOS\n\n// const defaultExercise = [\n//   {text: 'pecho plano', completed: false},\n//   {text: 'pecho inclinado', completed:false},\n//   {text: 'apertura de pecho', completed: false},\n//   {text: 'paralelas', completed: false},\n//   {text: 'trapecio', completed: false},\n// ]\n// localStorage.setItem('work-out', JSON.stringify(defaultExercise))\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // ESTADOS\n\n  const [createValue, setCreateValue] = React.useState(''); // Esta es la manera de crear un estado, con una variable que debe llevar entre corchetes dos parametros que seria el valor que se le este dando en tiempo real y el otro parametro seria el actualizador de el anterior estado\n  //console.log('Agregar exercise ' + createValue) // De esta manera puedo visualizar el restultado en la consola\n  const [exercises, saveExercises] = useLocalStorage('work-out', []); // Le estoy diciendo que el estado inicial es el array con objetos\n  const [searchExercise, setSearchExercise] = React.useState('');\n  //console.log(searchExercise)\n\n  // ESTADOS DERIVADOS\n\n  const completedExercise = exercises.filter(item => item.completed).length; // Esto es un estado derivado, son variables, calculos etc, que hacemos a traves de un estado, tambien con el metodo filter le estoy diciendo que me devuelva los elementos que cumplan con la condicion\n  const totalExercise = exercises.length;\n  const searchedExercise = exercises.filter(item => {\n    return item.text.toLowerCase().includes(searchExercise.toLocaleLowerCase()); // Con estas dos metodos nuevos en el resultado no importa si lo busco en minuscula o mayuscula. Primero debo convertir tod en minuscula en con el metodo .toLowerCase() y despues lo que este entre parentesis del metodo includes le agrego el metodo .toLocaleLowerCase()\n  });\n\n  const exerciseCompleted = text => {\n    const newExercise = [...exercises];\n    const exerciseIndex = newExercise.findIndex(item => item.text == text);\n    newExercise[exerciseIndex].completed = true;\n    saveExercises(newExercise);\n  };\n  const deltedExercise = () => {\n    const newExercise = [...exercises];\n    newExercise.splice(exercises, 1);\n    saveExercises(newExercise);\n  };\n  return /*#__PURE__*/_jsxDEV(AppComponents, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n} // En react los complementos de la pagina primero deben estar dentro de un div porque no se pueden devolver todos los componentes de una en el return y otra forma de hacer esto es con <React.Fragment></React.Fragment>\n_s(App, \"klxN2MWbUmeNC+lH19HrgtjdgKw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport { App };\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoTitle","TitleCreateExercise","CreateExercise","ImgExercise","SearchExercise","TodoList","TodoItem","useLocalStorage","AppComponents","React","App","createValue","setCreateValue","useState","exercises","saveExercises","searchExercise","setSearchExercise","completedExercise","filter","item","completed","length","totalExercise","searchedExercise","text","toLowerCase","includes","toLocaleLowerCase","exerciseCompleted","newExercise","exerciseIndex","findIndex","deltedExercise","splice"],"sources":["/home/juanjomxm314/personalProjects/projectOneReact/curso-react-intro/src/PrincipalComponent/App.js"],"sourcesContent":["import { TodoTitle } from'../ExerciseList/TodoTitle' // De esta manera es como importamos los componentes que estamos creando\nimport { TitleCreateExercise } from '../CreateExercise/CreateExercise'\nimport { CreateExercise } from'../CreateExercise/CreateExercise'\nimport { ImgExercise } from '../ExerciseList/ImgExercise.js'\nimport { SearchExercise } from '../ExerciseList/TodoItem.js'\nimport { TodoList } from'../ExerciseList/TodoList.js'\nimport { TodoItem } from'../ExerciseList/TodoItem.js'\nimport { useLocalStorage } from './useLocalSotorage.js'\nimport { AppComponents } from './AppComponents'\n// import { BotonCreateExercise } from'./CreateExercise'\nimport React from 'react'\n\n// LISTA DE EJERCICIOS\n\n// const defaultExercise = [\n//   {text: 'pecho plano', completed: false},\n//   {text: 'pecho inclinado', completed:false},\n//   {text: 'apertura de pecho', completed: false},\n//   {text: 'paralelas', completed: false},\n//   {text: 'trapecio', completed: false},\n// ]\n// localStorage.setItem('work-out', JSON.stringify(defaultExercise))\n\nfunction App() { \n\n  // ESTADOS\n\n  const [createValue, setCreateValue] = React.useState('') // Esta es la manera de crear un estado, con una variable que debe llevar entre corchetes dos parametros que seria el valor que se le este dando en tiempo real y el otro parametro seria el actualizador de el anterior estado\n  //console.log('Agregar exercise ' + createValue) // De esta manera puedo visualizar el restultado en la consola\n  const [exercises, saveExercises] = useLocalStorage('work-out', []) // Le estoy diciendo que el estado inicial es el array con objetos\n  const [searchExercise, setSearchExercise] = React.useState('')\n  //console.log(searchExercise)\n\n  // ESTADOS DERIVADOS\n\n  const completedExercise = exercises.filter(item => item.completed).length // Esto es un estado derivado, son variables, calculos etc, que hacemos a traves de un estado, tambien con el metodo filter le estoy diciendo que me devuelva los elementos que cumplan con la condicion\n  const totalExercise = exercises.length\n\n  const searchedExercise = exercises.filter((item)=>{\n      return item.text.toLowerCase().includes(searchExercise.toLocaleLowerCase()) // Con estas dos metodos nuevos en el resultado no importa si lo busco en minuscula o mayuscula. Primero debo convertir tod en minuscula en con el metodo .toLowerCase() y despues lo que este entre parentesis del metodo includes le agrego el metodo .toLocaleLowerCase()\n    })\n\n  const exerciseCompleted = (text)=>{\n    const newExercise =[...exercises]\n     const exerciseIndex = newExercise.findIndex(\n      (item) => item.text == text\n     )\n    newExercise[exerciseIndex].completed = true\n    saveExercises(newExercise)\n  }\n\n  const deltedExercise = ()=>{\n    const newExercise =[...exercises]\n    newExercise.splice(exercises, 1)\n    saveExercises(newExercise)\n  }\n\n  return (\n    <AppComponents />\n  )\n  } // En react los complementos de la pagina primero deben estar dentro de un div porque no se pueden devolver todos los componentes de una en el return y otra forma de hacer esto es con <React.Fragment></React.Fragment>\n\n  export {App}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAO,2BAA2B,EAAC;AACrD,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,cAAc,QAAO,kCAAkC;AAChE,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,QAAQ,QAAO,6BAA6B;AACrD,SAASC,QAAQ,QAAO,6BAA6B;AACrD,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C;AACA,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EAEb;;EAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC,EAAC;EACzD;EACA,MAAM,CAACC,SAAS,EAAEC,aAAa,CAAC,GAAGR,eAAe,CAAC,UAAU,EAAE,EAAE,CAAC,EAAC;EACnE,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;EAC9D;;EAEA;;EAEA,MAAMK,iBAAiB,GAAGJ,SAAS,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,CAACC,MAAM,EAAC;EAC1E,MAAMC,aAAa,GAAGT,SAAS,CAACQ,MAAM;EAEtC,MAAME,gBAAgB,GAAGV,SAAS,CAACK,MAAM,CAAEC,IAAI,IAAG;IAC9C,OAAOA,IAAI,CAACK,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACX,cAAc,CAACY,iBAAiB,EAAE,CAAC,EAAC;EAC9E,CAAC,CAAC;;EAEJ,MAAMC,iBAAiB,GAAIJ,IAAI,IAAG;IAChC,MAAMK,WAAW,GAAE,CAAC,GAAGhB,SAAS,CAAC;IAChC,MAAMiB,aAAa,GAAGD,WAAW,CAACE,SAAS,CACzCZ,IAAI,IAAKA,IAAI,CAACK,IAAI,IAAIA,IAAI,CAC3B;IACFK,WAAW,CAACC,aAAa,CAAC,CAACV,SAAS,GAAG,IAAI;IAC3CN,aAAa,CAACe,WAAW,CAAC;EAC5B,CAAC;EAED,MAAMG,cAAc,GAAG,MAAI;IACzB,MAAMH,WAAW,GAAE,CAAC,GAAGhB,SAAS,CAAC;IACjCgB,WAAW,CAACI,MAAM,CAACpB,SAAS,EAAE,CAAC,CAAC;IAChCC,aAAa,CAACe,WAAW,CAAC;EAC5B,CAAC;EAED,oBACE,QAAC,aAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AAEnB,CAAC,CAAC;AAAA,GArCKpB,GAAG;EAAA,QAMyBH,eAAe;AAAA;AAAA,KAN3CG,GAAG;AAuCV,SAAQA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}